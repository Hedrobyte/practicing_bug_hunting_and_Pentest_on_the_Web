#!/bin/bash

#######################################################################
# Script de Coleta de Informações de Domínio                          #
#                                                                     #
# Este script coleta informações de um domínio especificado           #
# e salvar os resultados em um diretório.                             #
#                                                                     #
# Ferramentas utilizadas:                                             #
#   - Amass, Findomain, Subfinder e Assetfinder                       #
#     github-subdomains, chaos, haktrails, crt.sh                     #
#     dnsvalidator, shuffledns, massdns, dnsgen                       #
#     altdns, dnsx                                                    #
# Uso: ./domain_info_collector.sh <domínio>                           #
#                                                                     #
# Autor: Pedro Henrique Maciel Alves                                  #                                                #                                                    #
#                                                                     #
#######################################################################

# Verifica se um domínio foi fornecido como argumento
if [ "$#" -ne 1 ]; then
    echo "Uso: $0 <domínio>"
    exit 1
fi

# Função para executar uma ferramenta e salvar os resultados
enumerate_subdomains() {
    local tool_command="$1"
    echo ""
    echo "Executando \"$tool_command\" para verificar subdomínios..."
    $tool_command >> "$SUBDOMAINS_FILE"  # Executa o comando e redireciona a saída para o arquivo
    echo "$tool_command concluído!"
}

# Função para verificar os subdomínios ativos com uma ferramenta específica
verify_subdomains() {
    local tool_command="$1"
    echo ""
    echo "Executando \"$tool_command\" para verificar subdomínios ativos..."
    eval "$tool_command" >> "$ACTIVE_SUBDOMAINS_FILE"  # Executa o comando e redireciona a saída para o arquivo
    echo "$tool_command concluído!"
}

DOMAIN="$1"
RESULTS_DIR="$DOMAIN-results"
SUBDOMAINS_FILE="$RESULTS_DIR/subdomains.txt"
ACTIVE_SUBDOMAINS_FILE="$RESULTS_DIR/active_subdomains.txt"

# Cria de diretórios para armazenar os resultados e listas auxiliares
mkdir -p "$RESULTS_DIR"
mkdir -p "list"

# Enumeração de subdomínios
enumerate_subdomains "amass enum -d $DOMAIN"
enumerate_subdomains "findomain -t $DOMAIN -silent"
enumerate_subdomains "subfinder -d $DOMAIN"
enumerate_subdomains "assetfinder --subs-only $DOMAIN"
#enumerate_subdomains "chaos -d $DOMAIN" 
#enumerate_subdomains "$DOMAIN | haktrails subdomains" 
enumerate_subdomains "cat $SUBDOMAINS_FILE | gau >> $SUBDOMAINS_FILE"  
enumerate_subdomains "cat $SUBDOMAINS_FILE | waybackurls >> $SUBDOMAINS_FILE" 
enumerate_subdomains "cat $SUBDOMAINS_FILE | httpx | grep '200' >> $SUBDOMAINS_FILE"  # Utiliza httpx para verificar a atividade HTTP
curl -s "https://crt.sh/?q=${DOMAIN}&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' \ 
    >> "$SUBDOMAINS_FILE"

sort -u -o "$SUBDOMAINS_FILE" "$SUBDOMAINS_FILE"
# gera subdominios
#cat domains.txt | dnsgen >> "$SUBDOMAINS_FILE"
 
# validação de DNS
#dnsvalidator -tL https://public-dns.info/nameservers.txt -threads 20 --silent > list\resolvers.txt

# Verificação subdomínios ativos
verify_subdomains "shuffledns -d $DOMAIN -list $SUBDOMAINS_FILE -r list\resolvers.txt"
verify_subdomains "massdns -r list/resolvers.txt -t A $SUBDOMAINS_FILE"
verify_subdomains "altdns -i $SUBDOMAINS_FILE -o data_output -w words.txt -r"
verify_subdomains "dnsx -l $SUBDOMAINS_FILE"
verify_subdomains "httpx -l $SUBDOMAINS_FILE -threads 200 -follow-redirects"
verify_subdomains "cat $SUBDOMAINS_FILE | hakrawler"
sort -u -o "$ACTIVE_SUBDOMAINS_FILE" "$ACTIVE_SUBDOMAINS_FILE"
