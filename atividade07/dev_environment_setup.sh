#!/bin/bash

######################################################################
# Script de Instalação de Ferramentas                                #
#                                                                    #
# Este script automatiza a instalação das ferramentas:    	     #
#   - Go Language, Visual Studio Code e pip3 do Python               #
#                                                                    #
# Uso:                                                               #
#   - Execute este script como superusuário (sudo) para garantir     #
#     as permissões necessárias para instalação.                     #
#                                                                    #
# Autor: Pedro Henrique Maciel Alves                                 #
#                                                                    #
######################################################################


# Função para exibir mensagens de erro e sair com código de erro
exit_with_error() {
    echo "Erro: $1" >&2
    exit 1
}

# Função para instalar o Go Language
install_go() {
    echo ""
    echo "Iniciando o processo de instalação do Go Language..."

    # URL da página que contém as versões
    local go_dl_url="https://go.dev/dl/"

    # Extrai o nome e o link da última versão da ferramenta
    local latest_version_url=$(curl -s "$go_dl_url" | grep -oE 'go[0-9.]*linux-amd64.tar.gz' | sort -V | tail -n 1)
    latest_version_url="$go_dl_url$latest_version_url"  # Concatena a URL completa
    local local_filename=$(basename "$latest_version_url")

    echo "Fazendo o Download..."
    curl -L -O "$latest_version_url" && echo "Download bem-sucedido!" || exit_with_error "Falha no download!!!"

    echo "Descompactando o pacote..."
    rm -rf /usr/local/go # Remove qualquer instalação anterior do Go
    tar -C /usr/local -xf "$local_filename" && echo "Descompactação bem-sucedida!" || exit_with_error "Erro na descompactação!!!"
    rm -rf "$local_filename" # Remove o pacote compactado

    # Configura o PATH ~/.zshrc (basta trocar o caminho do shell abaixo caso esteje utilizando outro)
    echo "Definindo as configurações de PATH ..."
    if ! grep -q "export PATH=\$PATH:/usr/local/go/bin" "/home/$SUDO_USER/.zshrc"; then
        echo "export PATH=\$PATH:/usr/local/go/bin" >> "/home/$SUDO_USER/.zshrc"
    fi
    if ! grep -q "export PATH=\$PATH:/home/$SUDO_USER/go/bin" "/home/$SUDO_USER/.zshrc"; then
        echo "export PATH=\$PATH:/home/$SUDO_USER/go/bin" >> "/home/$SUDO_USER/.zshrc"
    fi

    # Inicia um shell Zsh substituindo o shell atual
    sudo -u $SUDO_USER zsh -ic "exec zsh"

    echo "Go Language instalado com sucesso!"
}

# Função para instalar o Visual Studio Code
install_vscode() {
    echo ""
    echo "Iniciando o processo de instalação do Visual Studio Code..."

    # URL para a página de download do VS Code
    local vscode_dl_url="https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
    local local_filename="code.deb"

    echo "Fazendo o Download..."
    curl -L -o "$local_filename" "$vscode_dl_url" && echo "Download bem-sucedido!" || exit_with_error "Falha no download!!!"

    echo "Instalando o Visual Studio Code..."
    sudo dpkg -i "$local_filename" && sudo apt-get install -f -y && echo "Instalação bem-sucedida!" || exit_with_error "Erro na instalação!!!"
    rm "$local_filename" # Remove o pacote .deb

    echo "Visual Studio Code instalado com sucesso!"
}

# Função para instalar o pip3 do Python
install_pip3() {
    echo ""
    echo "Iniciando o processo de instalação do pip3 do Python..."
    apt update
    apt install -y python3-pip || exit_with_error "Falha ao instalar o pip3 do Python!!!"
    echo "pip3 do Python instalado com sucesso!"
}


# Verifica as permissões de superusuário
if [ "$EUID" -ne 0 ]; then
    echo "Este script requer permissões de superusuário."
    exit 1
fi

# Instalação das ferramentas
install_go
install_vscode
install_pip3

exit 0
